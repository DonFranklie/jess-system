generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Course {
  id String @id @default(uuid())

  userId String
  title String @db.Text
  unitCode    String? @db.Text
  course      String? @db.Text
  department  String? @db.Text
  school      String? @db.Text
  college     String? @db.Text
  description String? @db.Text

  isPublished Boolean @default(false)

  categoryId String?
  category Category? @relation(fields: [categoryId], references: [id])

  attachments Attachment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@fulltext([title])
   @@index([categoryId])
  
}

model Category {
  id String @id @default(uuid())
  name String @unique
  courses Course[]
}



model Attachment {
  id String @id @default(uuid())
  name String
  url String @db.Text

  courseId String
  course Course @relation(fields: [courseId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([courseId])
}

model Resource {
  id String @id @default(uuid())

  userId String
  title String @db.Text
  author      String? @db.Text
  school      String? @db.Text
  college     String? @db.Text
  description String? @db.Text
  imageUrl String? @db.Text

  isPublished Boolean @default(false)

  documents Document[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@fulltext([title])
  
}

model Document {
  id String @id @default(uuid())
  name String
  url String @db.Text

  resourceId String
  resource Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  @@index([resourceId])
}

model Video {
  id String @id @default(uuid())

  userId String
  title String @db.Text
  author      String? @db.Text
  school      String? @db.Text
  college     String? @db.Text
  description String? @db.Text
  Url String? @db.Text

  isPublished Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@fulltext([title])
  
}